version: '2'

services:
    react-frontend:
        container_name: react-frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile
        volumes:
            - './frontend:/usr/src/app/frontend'
            - '/app/node_modules'
        ports:
            - '3000:3000'
        environment:
            - NODE_ENV=development

    node-backend:
        container_name: node-backend
        image: node-backend
        build: 
            context: ./api
            dockerfile: Dockerfile
        networks:
            - backend
        ports:
            - "8081:8081"
        volumes:
            - ./api/:/usr/src/app/api

    web-cli:
        image: node-backend
        command: sh

    mongo:
        container_name: mongo
        image: mongo:latest
        networks: 
            - backend
        # environment: 
        #     - MONGO_INITDB_ROOT_USERNAME=root
        #     - MONGO_INITDB_ROOT_PASSWORD=password
        #     - MONGO_INITDB_DATABASE=image-db
        # 
        volumes:
            - ./mongo-database:/data/db
        #     - ./mongo-database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    # db:
    #     container_name: mysql-db
    #     image: mysql:latest
    #     volumes:
    #         - "./.mysql-data/db:/var/lib/mysql"
    #     restart: always
    #     ports:
    #         - 3306:3306
    #     networks: 
    #         - backend
    #     environment:
    #         MYSQL_ROOT_PASSWORD: password
    #         MYSQL_DATABASE: db
    #         MYSQL_USER: user
    #         MYSQL_PASSWORD: password

networks:
    backend:
        driver: bridge